---
- when: ec2_enabled
  block:
  - name: Install Boto library
    pip:
      name: boto3
      state: latest
      extra_args: --user --upgrade
    tags: [ec2, boto]

  - name: Create keypair
    ec2_key:
      name: '{{ ec2_key_name }}'
      key_material: '{{ item }}'
      region: '{{ ec2_region }}'
    with_file: '{{ ansible_env.HOME }}/.ssh/ec2.centos.pub'
    tags: [ec2, keypair]

  - name: Configure SSH and HTTPS security groups
    ec2_group:
      name: '{{ item.name }}'
      description: '{{ item.description}}'
      region: '{{ ec2_region }}'
      rules:
        - proto: '{{ item.proto }}'
          from_port: '{{ item.port }}'
          to_port: '{{ item.port }}'
          cidr_ip: 0.0.0.0/0
    with_items:
      - {name: mcore-ssh,   description: Allow SSH access,   proto: tcp, port: 22}
      - {name: mcore-https, description: Allow HTTPS access, proto: tcp, port: 8443}
    tags: [ec2, sec-group]

  - name: Configure Outbound security group
    ec2_group:
      name: mcore-outbound
      description: Allow outbound access
      region: "{{ ec2_region }}"
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
    tags: [ec2, sec-group]

  - name: Get the Centos EBS SSD AMI
    ec2_ami_find:
      architecture: x86_64
      name: 'CentOS Linux 7*EBS*'
      region: '{{ ec2_region }}'
      sort: creationDate
      sort_order: descending
      sort_end: 1
      no_result_action: fail
    register: centos_ami_find
    tags: [ec2, find-vmi]

  - name: Start the instances
    ec2:
      region: '{{ ec2_region }}'
      image: '{{ centos_ami_find.results[0].ami_id }}'
      instance_type: '{{ ec2_instance_type }}'
      key_name: '{{ ec2_key_name }}'
      group: [mcore-ssh, mcore-https, mcore-outbound]
      instance_tags: {Name: mcore-1, type: mobile-core, env: testing}
      exact_count: '{{ ec2_instance_count }}'
      count_tag: {type: mobile-core}
      wait: yes
    register: ec2
    tags: [ec2, start-vms]

  - name: Add instances to group
    add_host:
      hostname: '{{ item.public_dns_name }}'
      groups: mcore
    with_items: '{{ ec2.tagged_instances }}'
    when: item.public_dns_name is defined
    tags: [ec2, group-vms]

  - name: Wait for SSH server to be running
    wait_for:
      host: '{{ item.public_dns_name }}'
      port: 22
      search_regex: OpenSSH
    with_items: '{{ ec2.tagged_instances }}'
    when: item.public_dns_name is defined
    tags: [ec2, wait-vms]